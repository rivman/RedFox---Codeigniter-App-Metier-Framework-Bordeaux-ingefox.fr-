<?php

namespace DoctrineProxies\__CG__\PayFox\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class E_MangoPay_Card extends \PayFox\Entities\E_MangoPay_Card implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'nullableProperties', 'id', 'user', 'expirationDate', 'alias', 'cardProvider', 'cardType', 'country', 'product', 'bankCode', 'active', 'currency', 'validity', 'fingerprint'];
        }

        return ['__isInitialized__', 'nullableProperties', 'id', 'user', 'expirationDate', 'alias', 'cardProvider', 'cardType', 'country', 'product', 'bankCode', 'active', 'currency', 'validity', 'fingerprint'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (E_MangoPay_Card $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getNullableProperties(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNullableProperties', []);

        return parent::getNullableProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function setNullableProperties(array $nullableProperties): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNullableProperties', [$nullableProperties]);

        parent::setNullableProperties($nullableProperties);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidity', []);

        return parent::getValidity();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidity($validity): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidity', [$validity]);

        parent::setValidity($validity);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpirationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpirationDate', []);

        return parent::getExpirationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpirationDate($expirationDate): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpirationDate', [$expirationDate]);

        parent::setExpirationDate($expirationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlias', []);

        return parent::getAlias();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlias($alias): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlias', [$alias]);

        parent::setAlias($alias);
    }

    /**
     * {@inheritDoc}
     */
    public function getCardProvider()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCardProvider', []);

        return parent::getCardProvider();
    }

    /**
     * {@inheritDoc}
     */
    public function setCardProvider($cardProvider): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCardProvider', [$cardProvider]);

        parent::setCardProvider($cardProvider);
    }

    /**
     * {@inheritDoc}
     */
    public function getCardType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCardType', []);

        return parent::getCardType();
    }

    /**
     * {@inheritDoc}
     */
    public function setCardType($cardType): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCardType', [$cardType]);

        parent::setCardType($cardType);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', []);

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry($country): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', [$country]);

        parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', []);

        return parent::getProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduct($product): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', [$product]);

        parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getBankCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBankCode', []);

        return parent::getBankCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setBankCode($bankCode): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBankCode', [$bankCode]);

        parent::setBankCode($bankCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrency', []);

        return parent::getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrency($currency): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrency', [$currency]);

        parent::setCurrency($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function getFingerprint()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFingerprint', []);

        return parent::getFingerprint();
    }

    /**
     * {@inheritDoc}
     */
    public function setFingerprint($fingerprint): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFingerprint', [$fingerprint]);

        parent::setFingerprint($fingerprint);
    }

    /**
     * {@inheritDoc}
     */
    public function update($params)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'update', [$params]);

        return parent::update($params);
    }

}
